[{"C:\\Users\\manishd\\Desktop\\my-app\\src\\index.js":"1","C:\\Users\\manishd\\Desktop\\my-app\\src\\App.js":"2","C:\\Users\\manishd\\Desktop\\my-app\\src\\reportWebVitals.js":"3","C:\\Users\\manishd\\Desktop\\my-app\\src\\Components\\login\\RegistrationForm.js":"4","C:\\Users\\manishd\\Desktop\\my-app\\src\\Components\\login\\TextError.js":"5","C:\\Users\\manishd\\Desktop\\my-app\\src\\Components\\login\\Login.js":"6","C:\\Users\\manishd\\Desktop\\my-app\\src\\Components\\Routes.js":"7","C:\\Users\\manishd\\Desktop\\my-app\\src\\Components\\login\\NotFound.js":"8","C:\\Users\\manishd\\Desktop\\my-app\\src\\Components\\login\\Dashboard.js":"9"},{"size":585,"mtime":1611334853179,"results":"10","hashOfConfig":"11"},{"size":413,"mtime":1611569829182,"results":"12","hashOfConfig":"11"},{"size":362,"mtime":499162500000,"results":"13","hashOfConfig":"11"},{"size":6556,"mtime":1611310751612,"results":"14","hashOfConfig":"11"},{"size":187,"mtime":1611315061329,"results":"15","hashOfConfig":"11"},{"size":1898,"mtime":1611569865669,"results":"16","hashOfConfig":"11"},{"size":892,"mtime":1611569938404,"results":"17","hashOfConfig":"11"},{"size":110,"mtime":1611390101949,"results":"18","hashOfConfig":"11"},{"size":2123,"mtime":1611596285748,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22","usedDeprecatedRules":"23"},"129dt4c",{"filePath":"24","messages":"25","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"23"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"23"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\manishd\\Desktop\\my-app\\src\\index.js",["42"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport Routes from \"./Components/Routes\";\nimport './App.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    {/* <App/> */}\n    <Routes />,\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["43","44"],"C:\\Users\\manishd\\Desktop\\my-app\\src\\App.js",["45","46","47"],"import './App.css';\nimport Login from './Components/login/Login';\nimport TextError from './Components/login/TextError';\nimport RegistrationForm from './Components/login/RegistrationForm';\n// import { Login, RegistrationForm } from './Components/login';\n\n\nconst App = (props) => props.children;\n// function App() {\n  \n//   return (\n//     <div className=\"App\">\n     \n//     </div>\n//   );\n// }\n\nexport default App;","C:\\Users\\manishd\\Desktop\\my-app\\src\\reportWebVitals.js",[],"C:\\Users\\manishd\\Desktop\\my-app\\src\\Components\\login\\RegistrationForm.js",["48"],"import React from 'react'\r\nimport { Formik, Form, Field, ErrorMessage, FieldArray, FastField } from 'formik'\r\nimport * as Yup from 'yup'\r\nimport TextError from './TextError'\r\n\r\nconst initialValues = {\r\n    name: '',\r\n    email: '',\r\n    channel: '',\r\n    comments: '',\r\n    address: '',\r\n    social: {\r\n        facebook: '',\r\n        twitter: ''\r\n    },\r\n    phoneNumbers: ['', ''],\r\n    phNumbers: ['']\r\n}\r\n\r\nconst onSubmit = values => {\r\n    console.log('Form Data', values)\r\n}\r\n\r\nconst validationSchema = Yup.object({\r\n    name: Yup.string().required('Required!'),\r\n    email: Yup.string().email('Invalid Email Format').required('Required'),\r\n    channel: Yup.string().required('Required')\r\n})\r\n\r\n\r\nconst validateComments = value => {\r\n    let error\r\n    if(!value) {\r\n        error = 'Required'\r\n    }\r\n    return error\r\n}\r\n\r\n\r\nfunction RegistrationForm() {\r\n    return (\r\n        <Formik\r\n            initialValues={initialValues}\r\n            validationSchema={validationSchema}\r\n            onSubmit={onSubmit}\r\n        >\r\n            {\r\n                formik => {\r\n                    console.log('Formik props', formik)\r\n                    return (\r\n                        <Form>\r\n                <div className='form-control'>\r\n                    <label htmlFor='name'>Name</label>\r\n                    <Field type='text' id='name' name='name' placeholder='Enter Your Full Name'/>\r\n                    <ErrorMessage name='name' component={TextError} />\r\n                </div>\r\n                <div className='form-control'>\r\n                    <label htmlFor='email'>Email</label>\r\n                    <Field type='email' id='email' name='email' placeholder='Enter your email id'/>\r\n                    <ErrorMessage name='email'>\r\n                        {errorMsg => <div className='error'> {errorMsg}</div>}\r\n                    </ErrorMessage>\r\n                </div>\r\n                <div className='form-control'>\r\n                    <label htmlFor='channel'>Channel</label>\r\n                    <Field type='text' id='channel' name='channel' placeholder='youtube channel' />\r\n                    <ErrorMessage name='channel' component={TextError} />\r\n                </div>\r\n                <div className='form-control'>\r\n                    <label htmlFor='comments'>Comments</label>\r\n                    <Field as='textarea' id='comments' name='comments' validate={validateComments}/>\r\n                    <ErrorMessage name='comments' component={TextError}/>\r\n                </div>\r\n                <div className='form-control'>\r\n                    <label htmlFor='address'>Address</label>\r\n                    <FastField name='address'>\r\n                        {props => {\r\n                            // console.log('Field Render')\r\n                            const { field, form, meta } = props\r\n                            return (\r\n                                <div>\r\n                                    <input type='text' id='address' {...field} />\r\n                                    {meta.touched && meta.error ? <div>{meta.error}</div> : null}\r\n                                </div>\r\n                            )\r\n                        }\r\n                        }\r\n                    </FastField>\r\n                </div>\r\n\r\n                <div className='form-control'>\r\n                    <label htmlFor='facebook'> Facebook Profile</label>\r\n                    <Field type='text' id='facebook' name='social.facebook' />\r\n                </div>\r\n\r\n                <div className='form-control'>\r\n                    <label htmlFor='twitter'> Twitter Profile</label>\r\n                    <Field type='text' id='twitter' name='social.twitter' />\r\n                </div>\r\n\r\n                <div className='form-control'>\r\n                    <label htmlFor='primaryPh'> Primary Phone Number </label>\r\n                    <Field type='text' id='primaryPh' name='phoneNumbers[0]' />\r\n                </div>\r\n\r\n                <div className='form-control'>\r\n                    <label htmlFor='secondaryPh'> Secondary Phone Number </label>\r\n                    <Field type='text' id='secondaryPh' name='phoneNumbers[1]' />\r\n                </div>\r\n\r\n                <div className='form-control'>\r\n                    <label> List of phone numbers </label>\r\n                    <FieldArray name='phNumbers'>\r\n                        {\r\n                            (fieldArrayProps) => {\r\n                                const { push, remove, form } = fieldArrayProps\r\n                                const { values } = form\r\n                                const { phNumbers } = values\r\n                                // console.log('Form Errors', form.errors)\r\n                                return (\r\n                                    <div>\r\n                                        {phNumbers.map((phNumber, index) => (\r\n                                            <div key={index}>\r\n                                                <Field name={`phNumbers[${index}]`} />\r\n                                                {\r\n                                                    index > 0 && (\r\n                                                        <button type='button' onClick={() => remove(index)}>\r\n                                                            {' '}\r\n                                                    -{' '}\r\n                                                        </button>\r\n                                                    )}\r\n\r\n                                                <button type='button' onClick={() => push('')}>\r\n                                                    {' '}\r\n                                                + {' '}\r\n                                                </button>\r\n                                            </div>\r\n                                        ))}\r\n                                    </div>\r\n                                )\r\n                            }\r\n                        }\r\n\r\n                    </FieldArray>\r\n                </div>\r\n                <button type='button' onClick={() => formik.validateField('comments')}>Validate comments</button>\r\n                <button type='button' onClick={() => formik.validateForm()}>Validate all</button>\r\n                <button type='reset'>Reset</button>\r\n                <button type='submit'>Submit</button>\r\n            </Form>\r\n\r\n                    )\r\n                }\r\n            }\r\n\r\n            \r\n        </Formik>\r\n    )\r\n}\r\n\r\nexport default RegistrationForm","C:\\Users\\manishd\\Desktop\\my-app\\src\\Components\\login\\TextError.js",[],"C:\\Users\\manishd\\Desktop\\my-app\\src\\Components\\login\\Login.js",[],"C:\\Users\\manishd\\Desktop\\my-app\\src\\Components\\Routes.js",[],"C:\\Users\\manishd\\Desktop\\my-app\\src\\Components\\login\\NotFound.js",[],"C:\\Users\\manishd\\Desktop\\my-app\\src\\Components\\login\\Dashboard.js",["49","50","51","52","53"],{"ruleId":"54","severity":1,"message":"55","line":4,"column":8,"nodeType":"56","messageId":"57","endLine":4,"endColumn":11},{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","replacedBy":"61"},{"ruleId":"54","severity":1,"message":"62","line":2,"column":8,"nodeType":"56","messageId":"57","endLine":2,"endColumn":13},{"ruleId":"54","severity":1,"message":"63","line":3,"column":8,"nodeType":"56","messageId":"57","endLine":3,"endColumn":17},{"ruleId":"54","severity":1,"message":"64","line":4,"column":8,"nodeType":"56","messageId":"57","endLine":4,"endColumn":24},{"ruleId":"54","severity":1,"message":"65","line":79,"column":44,"nodeType":"56","messageId":"57","endLine":79,"endColumn":48},{"ruleId":"54","severity":1,"message":"66","line":3,"column":10,"nodeType":"56","messageId":"57","endLine":3,"endColumn":15},{"ruleId":"54","severity":1,"message":"67","line":3,"column":17,"nodeType":"56","messageId":"57","endLine":3,"endColumn":23},{"ruleId":"54","severity":1,"message":"68","line":17,"column":18,"nodeType":"56","messageId":"57","endLine":17,"endColumn":25},{"ruleId":"54","severity":1,"message":"69","line":20,"column":12,"nodeType":"56","messageId":"57","endLine":20,"endColumn":23},{"ruleId":"54","severity":1,"message":"70","line":22,"column":12,"nodeType":"56","messageId":"57","endLine":22,"endColumn":16},"no-unused-vars","'App' is defined but never used.","Identifier","unusedVar","no-native-reassign",["71"],"no-negated-in-lhs",["72"],"'Login' is defined but never used.","'TextError' is defined but never used.","'RegistrationForm' is defined but never used.","'form' is assigned a value but never used.","'Modal' is defined but never used.","'Button' is defined but never used.","'setHits' is assigned a value but never used.","'currentPage' is assigned a value but never used.","'Data' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]